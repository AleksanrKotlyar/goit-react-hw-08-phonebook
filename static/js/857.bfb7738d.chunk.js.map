{"version":3,"file":"static/js/857.bfb7738d.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/ContactsSkeleton/ContactsSkeleton.jsx","components/PhoneBook/PhoneBook.jsx","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LabelForm = styled('label')`\n  display: flex;\n  flex-direction: column;\n`;\nexport const InputForm = styled.input`\n  background-color: ${p => p.theme.colors.inputColor};\n  width: 200px;\n  box-shadow: ${p => p.theme.shadows.input};\n  border-radius: ${p => p.theme.radii.normal};\n  outline: none;\n\n  :autof :hover,\n  :focus {\n    background-color: ${p => p.theme.colors.colorInteract};\n    box-shadow: none;\n  }\n`;\n\nexport const SubmitBtn = styled.button`\n  margin-right: auto;\n  margin-left: auto;\n  margin-top: ${p => p.theme.space[3]}px;\n  border: 0 solid transparent;\n  padding: ${p => p.theme.space[2]}px ${p => p.theme.space[3]}px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: ${p => p.theme.fontSizes.xs}px;\n  background-color: transparent;\n  border-radius: ${p => p.theme.radii.normal};\n  box-shadow: inset -2px -2px 4px 0 #222222;\n  cursor: pointer;\n  transition: color ease-in-out 200ms, box-shadow ease-in-out 200ms;\n\n  :hover,\n  :focus {\n    background-color: ${p => p.theme.colors.colorInteract};\n\n    box-shadow: inset -2px -2px 4px 0 ${p => p.theme.colors.colorTitle};\n  }\n  :active {\n    background-color: ${p => p.theme.colors.colorInteract};\n    box-shadow: inset 2px 2px 4px 0 ${p => p.theme.colors.colorTitle};\n  }\n`;\n","export const getContacts = state => state.contacts.items;\nexport const IsLoading = state => state.contacts.isLoading;\nexport const getFilter = state => state.filter;\n","import { useState } from 'react';\nimport { AiOutlineUserAdd } from 'react-icons/ai';\nimport { Box } from '../PhoneBook/PhoneBook.styled';\nimport { SubmitBtn, LabelForm, InputForm } from './ContactForm.styled';\n// import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport { getContacts } from 'redux/contacts/selectors';\nimport toast from 'react-hot-toast';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleOnInputChange = e => {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n        break;\n      case 'phone':\n        setPhone(e.target.value);\n        break;\n      default:\n        console.log('Invalid subscription type');\n    }\n  };\n\n  const handleOnSubmit = e => {\n    e.preventDefault();\n    const normalizeName = name.toLocaleLowerCase();\n    const IsContactInList = contacts.find(\n      contact => contact.name.toLocaleLowerCase() === normalizeName\n    );\n\n    IsContactInList\n      ? toast.error(`${name} is already in contacts`, {\n          duration: 1500,\n          position: 'top-right',\n          style: {\n            borderRadius: '10px',\n            background: '#f6da26',\n            border: '1px solid #333',\n            color: '#000',\n          },\n        })\n      : dispatch(\n          addContact({\n            name: e.currentTarget.elements.name.value,\n            phone: e.currentTarget.elements.phone.value,\n          })\n        );\n\n    if (!IsContactInList) {\n      setName('');\n      setPhone('');\n    }\n  };\n\n  return (\n    <Box\n      as=\"form\"\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      onSubmit={handleOnSubmit}\n      autocomplete=\"off\"\n    >\n      <LabelForm>\n        Name\n        <InputForm\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleOnInputChange}\n          autocomplete=\"off\"\n        />\n      </LabelForm>\n      <LabelForm>\n        Number\n        <InputForm\n          type=\"tel\"\n          name=\"phone\"\n          value={phone}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleOnInputChange}\n          autocomplete=\"off\"\n        />\n      </LabelForm>\n      <SubmitBtn type=\"submit\">\n        <AiOutlineUserAdd /> Add contact\n      </SubmitBtn>\n    </Box>\n  );\n};\n\n// ContactForm.propTypes = {\n//   onSubmitForm: PropTypes.func.isRequired,\n// };\n","import styled from 'styled-components';\n\nexport const FilterLabelForm = styled('label')`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const FilterInputForm = styled.input`\n  background-color: ${p => p.theme.colors.inputColor};\n  width: 200px;\n  box-shadow: ${p => p.theme.shadows.input};\n  border-radius: ${p => p.theme.radii.normal};\n  outline: none;\n\n  :hover,\n  :focus {\n    background-color: ${p => p.theme.colors.colorInteract};\n    box-shadow: none;\n  }\n`;\n","import { FilterLabelForm, FilterInputForm } from './Filter.styled';\n// import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getValue } from 'redux/contacts/filterSlice';\nimport { getFilter } from 'redux/contacts/selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(getFilter);\n\n  return (\n    <>\n      <FilterLabelForm>\n        Find contacts by name\n        <FilterInputForm\n          type=\"text\"\n          name=\"filter\"\n          value={value}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={e => dispatch(getValue(e.target.value))}\n        />\n      </FilterLabelForm>\n    </>\n  );\n};\n\n// Filter.propTypes = {\n//   handleFilterOnInputChange: PropTypes.func.isRequired,\n//   value: PropTypes.string.isRequired,\n// };\n","import styled from 'styled-components';\n\nexport const ContactItem = styled.li`\n  display: flex;\n  align-items: center;\n  width: 350px;\n  background-color: ${p => p.theme.colors.inputColor};\n  border-radius: ${p => p.theme.radii.normal};\n  padding-left: ${p => p.theme.space[3]}px;\n  margin-bottom: 5px;\n`;\n// export const ContactNumber = styled.span`\n//   margin-left: ${p => p.theme.space[3]}px;\n// `;\n","import styled from 'styled-components';\n\nexport const ContactNumber = styled.span`\n  margin-left: ${p => p.theme.space[2]}px;\n`;\n\nexport const DeleteBtn = styled.button`\n  margin-left: auto;\n  border: 0 solid transparent;\n  padding: ${p => p.theme.space[2]}px ${p => p.theme.space[3]}px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: ${p => p.theme.fontSizes.xs}px;\n  background-color: transparent;\n  border-radius: ${p => p.theme.radii.normal};\n  box-shadow: inset -2px -2px 4px 0 #222222;\n  cursor: pointer;\n  transition: color ease-in-out 200ms, box-shadow ease-in-out 200ms;\n\n  :hover,\n  :focus {\n    background-color: ${p => p.theme.colors.colorInteract};\n\n    box-shadow: inset -2px -2px 4px 0 ${p => p.theme.colors.colorTitle};\n  }\n  :active {\n    background-color: ${p => p.theme.colors.colorInteract};\n    box-shadow: inset 2px 2px 4px 0 ${p => p.theme.colors.colorTitle};\n  }\n`;\n","import { ContactNumber, DeleteBtn } from './ContactItem.styled';\nimport { AiOutlineUserDelete } from 'react-icons/ai';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\nimport { IsLoading } from 'redux/contacts/selectors';\n\nexport const Item = ({ name, phone, id }) => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(IsLoading);\n\n  return (\n    <>\n      {name}: <ContactNumber>{phone}</ContactNumber>\n      <DeleteBtn\n        type=\"button\"\n        disabled={isLoading}\n        onClick={() => dispatch(deleteContact(id))}\n      >\n        <AiOutlineUserDelete />\n        Delete\n      </DeleteBtn>\n    </>\n  );\n};\n\nItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import { Box } from '../PhoneBook/PhoneBook.styled';\nimport { ContactItem } from './ContactList.styled';\n// import PropTypes from 'prop-types';\nimport { Item } from '../ContactItem/ContactItem';\nimport { useSelector } from 'react-redux';\nimport { getContacts, getFilter } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n\n  const normFilter = filter.toLocaleLowerCase();\n  const renderContactsList = contacts.filter(contact =>\n    contact.name.toLocaleLowerCase().includes(normFilter)\n  );\n\n  return (\n    <Box mr=\"auto\" ml=\"auto\" mt=\"5px\" pl=\"2\" as=\"ul\">\n      {renderContactsList.map(({ id, name, phone }) => (\n        <ContactItem key={id}>\n          <Item name={name} phone={phone} id={id} />\n        </ContactItem>\n      ))}\n    </Box>\n  );\n};\n\n// ContactList.propTypes = {\n//   data: PropTypes.arrayOf(PropTypes.object).isRequired,\n//   handleOnDelete: PropTypes.func.isRequired,\n// };\n","import ContentLoader from 'react-content-loader';\nimport React from 'react';\n\nexport const ContactsSkeleton = props => (\n  <ContentLoader\n    width={400}\n    height={70}\n    viewBox=\"0 0 400 70\"\n    backgroundColor=\"#1f55463d\"\n  >\n    <rect x=\"5\" y=\"5\" rx=\"4\" ry=\"4\" width=\"355\" height=\"24\" />\n    <rect x=\"5\" y=\"35\" rx=\"4\" ry=\"4\" width=\"355\" height=\"24\" />\n  </ContentLoader>\n);\n","// import React, { useEffect } from 'react';\nimport { Box, Title, SubTitle, Plug } from './PhoneBook.styled';\nimport { ContactForm } from '../ContactForm/ContactForm';\nimport { Filter } from '../Filter/Filter';\nimport { ContactList } from '../ContactList/ContactList';\nimport { ContactsSkeleton } from '../ContactsSkeleton/ContactsSkeleton';\nimport { useSelector } from 'react-redux';\nimport 'Utils/index.css';\n// import { fetchContacts } from 'redux/contacts/contactsOperations';\n// import { useDispatch } from 'react-redux';\nimport { getContacts, IsLoading } from 'redux/contacts/selectors';\n\nexport const PhoneBook = () => {\n  const contacts = useSelector(getContacts);\n  const isLoading = useSelector(IsLoading);\n\n  // const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //   dispatch(fetchContacts());\n  // }, [dispatch]);\n\n  return (\n    <Box\n      bg=\"mainBg\"\n      p=\"4\"\n      mr=\"auto\"\n      ml=\"auto\"\n      mt=\"3\"\n      width=\"400px\"\n      max-height=\"100vh\"\n      border=\"normal\"\n      borderRadius=\"normal\"\n      borderColor=\"#3d341aba\"\n      boxShadow=\"base\"\n      as=\"section\"\n    >\n      <Title>Phonebook</Title>\n      <ContactForm />\n      <SubTitle>Contacts</SubTitle>\n      <Filter />\n      {contacts && isLoading && <ContactsSkeleton />}\n      {contacts.length === 0 && !isLoading && <Plug> No contacts</Plug>}\n      {!isLoading && contacts && <ContactList />}\n    </Box>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\n// import { selectLoading } from 'redux/tasks/selectors';\nimport { PhoneBook } from 'components/PhoneBook/PhoneBook';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  // const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <PhoneBook />\n      {/* <TaskEditor />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <TaskList /> */}\n    </>\n  );\n}\n"],"names":["LabelForm","styled","InputForm","p","theme","colors","inputColor","shadows","input","radii","normal","colorInteract","SubmitBtn","space","fontSizes","xs","colorTitle","getContacts","state","contacts","items","IsLoading","isLoading","getFilter","filter","ContactForm","useState","name","setName","phone","setPhone","useSelector","dispatch","useDispatch","handleOnInputChange","e","target","value","console","log","as","display","flexDirection","alignItems","onSubmit","preventDefault","normalizeName","toLocaleLowerCase","IsContactInList","find","contact","toast","duration","position","style","borderRadius","background","border","color","addContact","currentTarget","elements","autocomplete","type","pattern","title","required","onChange","FilterLabelForm","FilterInputForm","Filter","getValue","ContactItem","ContactNumber","DeleteBtn","Item","id","disabled","onClick","deleteContact","ContactList","normFilter","renderContactsList","includes","mr","ml","mt","pl","map","ContactsSkeleton","props","width","height","viewBox","backgroundColor","x","y","rx","ry","PhoneBook","bg","borderColor","boxShadow","length","Tasks","useEffect","fetchContacts","Helmet"],"sourceRoot":""}