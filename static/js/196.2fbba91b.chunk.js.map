{"version":3,"file":"static/js/196.2fbba91b.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactEdit/ContactEdit.styled.jsx","components/ContactEdit/ContactEdit.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/ContactsSkeleton/ContactsSkeleton.jsx","components/PhoneBook/PhoneBook.jsx","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LabelForm = styled('label')`\n  display: flex;\n  align-items: center;\n  margin-bottom: ${p => p.theme.space[2]}px;\n`;\nexport const InputForm = styled.input`\n  width: 250px;\n  font-size: 16px;\n  background-color: transparent;\n  border: none;\n  border-bottom: 0.5px solid #000000;\n  margin-bottom: ${p => p.theme.space[4]}px;\n\n  :hover {\n    outline: none;\n    box-shadow: inset 0px -3px 0px -2px ${p => p.theme.colors.colorTitle};\n    transition: box-shadow linear 100ms;\n  }\n  :focus,\n  :active {\n    outline: none;\n    box-shadow: inset 0px -8px 3px -4px ${p => p.theme.colors.colorTitle};\n    border-radius: 3px;\n    border-color: ${p => p.theme.colors.colorTitle};\n    transition: box-shadow linear 500ms;\n  }\n`;\n\nexport const SubmitBtn = styled.button`\n  margin-right: auto;\n  margin-left: auto;\n  margin-top: ${p => p.theme.space[3]}px;\n  border: 0 solid transparent;\n  padding: ${p => p.theme.space[2]}px ${p => p.theme.space[3]}px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: ${p => p.theme.fontSizes.xs}px;\n  background-color: transparent;\n  border-radius: ${p => p.theme.radii.normal};\n  box-shadow: inset -2px -2px 4px 0 #222222;\n  cursor: pointer;\n  transition: color ease-in-out 200ms, box-shadow ease-in-out 200ms;\n\n  :hover,\n  :focus {\n    background-color: ${p => p.theme.colors.colorInteract};\n\n    box-shadow: inset -2px -2px 4px 0 ${p => p.theme.colors.colorTitle};\n  }\n  :active {\n    background-color: ${p => p.theme.colors.colorInteract};\n    box-shadow: inset 2px 2px 4px 0 ${p => p.theme.colors.colorTitle};\n  }\n`;\n","export const getContacts = state => state.contacts.items;\nexport const IsLoading = state => state.contacts.isLoading;\nexport const getFilter = state => state.filter;\n","import { useEffect, useState } from 'react';\nimport { Box } from '../PhoneBook/PhoneBook.styled';\nimport { LabelForm, InputForm } from './ContactForm.styled';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact, updateContact } from 'redux/contacts/contactsOperations';\nimport { IsLoading, getContacts } from 'redux/contacts/selectors';\nimport PersonIcon from '@mui/icons-material/Person';\nimport PhoneIcon from '@mui/icons-material/Phone';\nimport { LoadingButton } from '@mui/lab';\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\nimport toast from 'react-hot-toast';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\n\nconst themeAddBtn = createTheme({\n  components: {\n    MuiLoadingButton: {\n      styleOverrides: {\n        root: {\n          fontSize: '16px',\n          textTransform: 'capitalize',\n          color: '#000000',\n          borderColor: '#3d341aba',\n          '&:hover': {\n            borderColor: '#eab013ba',\n            boxShadow: 'inset 0 0 10px 1px #eab013ba',\n          },\n        },\n      },\n    },\n  },\n});\n\nexport const ContactForm = ({\n  handleSubmitCloseModal,\n  defaultValue = { nick: '', phone: '' },\n  btnText = 'Add contact',\n  id,\n}) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContacts);\n  const isLoading = useSelector(IsLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (defaultValue.nick !== '' && defaultValue.phone !== '') {\n      setName(defaultValue.nick);\n      setNumber(defaultValue.phone);\n    }\n  }, [defaultValue.nick, defaultValue.phone]);\n\n  const handleOnInputChange = e => {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n        break;\n      case 'number':\n        setNumber(e.target.value);\n        break;\n      default:\n        console.log('Invalid subscription type');\n    }\n  };\n\n  const handleOnSubmit = e => {\n    e.preventDefault();\n    const normalizeName = name.toLocaleLowerCase();\n    const IsContactInList = contacts.find(\n      contact => contact.name.toLocaleLowerCase() === normalizeName\n    );\n\n    if (\n      defaultValue.nick !== '' &&\n      defaultValue.phone !== '' &&\n      name === defaultValue.nick &&\n      number === defaultValue.phone\n    )\n      return handleSubmitCloseModal();\n\n    IsContactInList && id !== IsContactInList.id\n      ? toast.error(\n          `Contact with name ${name}} is already in exists! Try another name`,\n          {\n            duration: 1500,\n            position: 'top-right',\n            style: {\n              borderRadius: '10px',\n              background: '#f6da26',\n              border: '1px solid #333',\n              color: '#000',\n            },\n          }\n        )\n      : e.currentTarget.elements[2].innerText === 'Update'\n      ? dispatch(\n          updateContact({\n            id,\n            name: name,\n            number: number,\n          })\n        )\n      : dispatch(\n          addContact({\n            name: e.currentTarget.elements.name.value,\n            number: e.currentTarget.elements.number.value,\n          })\n        );\n\n    if (!IsContactInList) {\n      setName('');\n      setNumber('');\n      // e.currentTarget.reset();\n    }\n  };\n\n  return (\n    <Box\n      as=\"form\"\n      display=\"flex\"\n      flexDirection=\"column\"\n      onSubmit={handleOnSubmit}\n      autocomplete=\"off\"\n    >\n      <LabelForm htmlFor=\"nameId\">\n        <PersonIcon sx={{ color: 'black' }} fontSize=\"small\" />\n        <span\n          style={{ marginRight: '5px', fontSize: '20px', fontWeight: '600' }}\n        >\n          Name\n        </span>\n      </LabelForm>\n      <InputForm\n        id=\"nameId\"\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={handleOnInputChange}\n        autocomplete=\"off\"\n        autoFocus\n      />\n\n      <LabelForm>\n        <PhoneIcon sx={{ color: 'black' }} fontSize=\"small\" />\n        <span\n          style={{ marginRight: '5px', fontSize: '20px', fontWeight: '600' }}\n        >\n          Number\n        </span>\n      </LabelForm>\n      <InputForm\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        maxLength=\"20\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        onChange={handleOnInputChange}\n        autocomplete=\"off\"\n      />\n      <ThemeProvider theme={themeAddBtn}>\n        <LoadingButton\n          loading={isLoading}\n          loadingPosition=\"end\"\n          endIcon={<AddCircleOutlineIcon />}\n          variant=\"outlined\"\n          type=\"submit\"\n          size=\"small\"\n          sx={{ mt: '20px' }}\n        >\n          {btnText}\n        </LoadingButton>\n      </ThemeProvider>\n    </Box>\n  );\n};\n\nContactForm.propTypes = {\n  handleSubmitCloseModal: PropTypes.func,\n  defaultValue: PropTypes.object,\n  btnText: PropTypes.string,\n  id: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const FilterLabelForm = styled('label')`\n  margin-right: 10px;\n  font-weight: 600;\n`;\n\nexport const FilterInputForm = styled.input`\n  background-color: ${p => p.theme.colors.inputColor};\n  width: 200px;\n  box-shadow: ${p => p.theme.shadows.input};\n  border-radius: ${p => p.theme.radii.normal};\n  outline: none;\n\n  :hover,\n  :focus {\n    background-color: ${p => p.theme.colors.colorInteract};\n    box-shadow: none;\n  }\n`;\n\n// .input {\n//   align-self: flex-start;\n// }\n","import { Input } from '@mui/material';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport { Box } from 'components/PhoneBook/PhoneBook.styled';\n// import { FilterLabelForm, FilterInputForm } from './Filter.styled';\n// import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getValue } from 'redux/contacts/filterSlice';\nimport { getFilter } from 'redux/contacts/selectors';\nimport { FilterLabelForm } from './Filter.styled';\n\nconst FilterInput = createTheme({\n  components: {\n    MuiInput: {\n      styleOverrides: {\n        root: {\n          '&:after': {\n            borderBottomColor: '#eab013ba',\n          },\n        },\n        input: {\n          fontFamily: 'Ubuntu',\n          fontSize: '14px',\n          color: '#000000',\n          padding: '0',\n        },\n      },\n    },\n  },\n});\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(getFilter);\n\n  return (\n    <Box display=\"flex\" alignItems=\"flex-end\" mb=\"15px\">\n      <FilterLabelForm htmlFor=\"filterInputId\">\n        Find contacts by name:\n      </FilterLabelForm>\n\n      <ThemeProvider theme={FilterInput}>\n        <Input\n          id=\"filterInputId\"\n          type=\"text\"\n          name=\"filter\"\n          value={value}\n          onChange={e => dispatch(getValue(e.target.value))}\n          autoComplete=\"off\"\n        />\n      </ThemeProvider>\n    </Box>\n    /* <FilterLabelForm>\n      Find contacts by name\n      <FilterInputForm\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={e => dispatch(getValue(e.target.value))}\n      />\n    </FilterLabelForm> */\n  );\n};\n\n// Filter.propTypes = {\n//   handleFilterOnInputChange: PropTypes.func.isRequired,\n//   value: PropTypes.string.isRequired,\n// };\n","import styled from 'styled-components';\n\nexport const ContactItem = styled.li`\n  display: flex;\n  align-items: center;\n\n  background-color: ${p => p.theme.colors.inputColor};\n  border-radius: ${p => p.theme.radii.normal};\n  padding-left: ${p => p.theme.space[3]}px;\n\n  &:not(:last-child) {\n    margin-bottom: 5px;\n  }\n`;\n","import styled from 'styled-components';\nimport { AiFillEdit } from 'react-icons/ai';\n\nexport const ContactNumber = styled.span`\n  /* margin-left: ${p => p.theme.space[2]}px; */\n  width: 150px;\n  text-align: left;\n  margin-left: auto;\n`;\n\nexport const DeleteBtn = styled.button`\n  border: 0 solid transparent;\n  padding: ${p => p.theme.space[2]}px ${p => p.theme.space[3]}px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: ${p => p.theme.fontSizes.xs}px;\n  background-color: transparent;\n  border-radius: ${p => p.theme.radii.normal};\n  box-shadow: inset -2px -2px 4px 0 #222222;\n  cursor: pointer;\n  transition: color ease-in-out 200ms, box-shadow ease-in-out 200ms;\n\n  :hover,\n  :focus {\n    background-color: ${p => p.theme.colors.colorInteract};\n    box-shadow: inset -2px -2px 4px 0 ${p => p.theme.colors.colorTitle};\n  }\n  :active {\n    background-color: ${p => p.theme.colors.colorInteract};\n    box-shadow: inset 2px 2px 4px 0 ${p => p.theme.colors.colorTitle};\n  }\n`;\n\nexport const EditBtn = styled(AiFillEdit)`\n  margin-right: 15px;\n  margin-left: 15px;\n  :active,\n  :hover,\n  :focus {\n    color: ${p => p.theme.colors.colorTitle};\n  }\n`;\n","import styled from 'styled-components';\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.4);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Modal = styled.div`\n  position: relative;\n  padding: 24px;\n  background-image: linear-gradient(to left, #134e5e, #71b280);\n  border-radius: ${p => p.theme.radii.normal};\n`;\n\nexport const TitleWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 10px;\n`;\n\nexport const CloseBtn = styled(AiOutlineCloseCircle)`\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  color: black;\n\n  :focus,\n  :hover,\n  &.active {\n    color: #eab013ba;\n  }\n`;\n","import { Modal, Overlay, TitleWrapper, CloseBtn } from './ContactEdit.styled';\nimport { ContactForm } from '../ContactForm/ContactForm';\n\nexport const EditContact = ({ closeModal, id }) => {\n  const contacts = localStorage.getItem('persist:contacts');\n  const items = JSON.parse(contacts);\n\n  const contact = JSON.parse(items.items).find(item => item.id === id);\n\n  const handleCloseModal = e => {\n    if (e.currentTarget === e.target || e.key === 'Escape') {\n      closeModal(false);\n      document.querySelector('body').style.overflowY = 'visible';\n      window.removeEventListener('keydown', handleCloseModal);\n    }\n  };\n  const handleSubmitCloseModal = () => closeModal(false);\n\n  document.querySelector('body').style.overflowY = 'hidden';\n  window.addEventListener('keydown', handleCloseModal);\n\n  return (\n    <Overlay onClick={handleCloseModal}>\n      <Modal>\n        <TitleWrapper>\n          <p\n            style={{\n              marginLeft: 'auto',\n              marginRight: 'auto',\n              color: '#eab013ba',\n              fontSize: '24px',\n              marginBottom: '30px',\n            }}\n          >\n            Update contact\n          </p>\n          <CloseBtn type=\"button\" onClick={handleSubmitCloseModal} />\n        </TitleWrapper>\n        {contact && (\n          <ContactForm\n            handleSubmitCloseModal={handleSubmitCloseModal}\n            id={id}\n            btnText={'Update'}\n            defaultValue={{ nick: contact.name, phone: contact.number }}\n          />\n        )}\n      </Modal>\n    </Overlay>\n  );\n};\n","import { ContactNumber, DeleteBtn, EditBtn } from './ContactItem.styled';\nimport { AiOutlineUserDelete } from 'react-icons/ai';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\nimport { IsLoading } from 'redux/contacts/selectors';\nimport { useState } from 'react';\nimport { EditContact } from 'components/ContactEdit/ContactEdit';\n\nexport const Item = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(IsLoading);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  return (\n    <>\n      <span>{name}:</span> <ContactNumber>{number}</ContactNumber>\n      <EditBtn type=\"button\" onClick={() => setIsModalOpen(true)} />\n      <DeleteBtn\n        type=\"button\"\n        disabled={isLoading}\n        onClick={() => dispatch(deleteContact(id))}\n      >\n        <AiOutlineUserDelete />\n        Delete\n      </DeleteBtn>\n      {isModalOpen && <EditContact id={id} closeModal={setIsModalOpen} />}\n    </>\n  );\n};\n\nItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import { Box, Plug } from '../PhoneBook/PhoneBook.styled';\nimport { ContactItem } from './ContactList.styled';\n// import PropTypes from 'prop-types';\nimport { Item } from '../ContactItem/ContactItem';\nimport { useSelector } from 'react-redux';\nimport { getContacts, getFilter } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n\n  const normFilter = filter.toLocaleLowerCase();\n  const renderContactsList = contacts.filter(contact =>\n    contact.name.toLocaleLowerCase().includes(normFilter)\n  );\n\n  return (\n    <Box mr=\"auto\" width=\"100%\" mt=\"5px\" as=\"ul\">\n      {renderContactsList.length ? (\n        renderContactsList.map(({ id, name, number }) => (\n          <ContactItem key={id}>\n            <Item name={name} number={number} id={id} />\n          </ContactItem>\n        ))\n      ) : (\n        <Plug>No contacts find</Plug>\n      )}\n    </Box>\n  );\n};\n\n// ContactList.propTypes = {\n//   data: PropTypes.arrayOf(PropTypes.object).isRequired,\n//   handleOnDelete: PropTypes.func.isRequired,\n// };\n","import ContentLoader from 'react-content-loader';\nimport React from 'react';\n\nexport const ContactsSkeleton = props => (\n  <ContentLoader\n    width={400}\n    height={70}\n    viewBox=\"0 0 400 70\"\n    backgroundColor=\"#1f55463d\"\n  >\n    <rect x=\"5\" y=\"5\" rx=\"4\" ry=\"4\" width=\"355\" height=\"24\" />\n    <rect x=\"5\" y=\"35\" rx=\"4\" ry=\"4\" width=\"355\" height=\"24\" />\n  </ContentLoader>\n);\n","import {\n  Box,\n  Title,\n  SubTitle,\n  Plug,\n  Wrapper,\n  WrapperContacts,\n} from './PhoneBook.styled';\nimport { ContactForm } from '../ContactForm/ContactForm';\nimport { Filter } from '../Filter/Filter';\nimport { ContactList } from '../ContactList/ContactList';\nimport { ContactsSkeleton } from '../ContactsSkeleton/ContactsSkeleton';\nimport { useSelector } from 'react-redux';\n\nimport 'Utils/index.css';\n\nimport { getContacts, IsLoading } from 'redux/contacts/selectors';\n\nexport const PhoneBook = () => {\n  const contacts = useSelector(getContacts);\n  const isLoading = useSelector(IsLoading);\n\n  return (\n    <>\n      <Box\n        backgroundImage=\"linear-gradient(to bottom, #1c7791, #71b280);)\"\n        backgroundRepeat=\"no-repeat\"\n        backgroundSize=\"cover\"\n        p=\"4\"\n        mr=\"auto\"\n        ml=\"auto\"\n        mt=\"3\"\n        width=\"700px\"\n        minHeight=\"75vh\"\n        border=\"normal\"\n        borderRadius=\"normal\"\n        borderColor=\"#3d341aba\"\n        boxShadow=\"base\"\n        as=\"section\"\n      >\n        <Title>Phonebook</Title>\n        <Wrapper>\n          <Box\n            display=\"flex\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n            border=\"1px  \"\n            borderStyle=\"dotted\"\n            borderColor=\"colorTitle\"\n            borderRadius=\"normal\"\n            maxHeight=\"270px\"\n            p=\"3\"\n          >\n            <SubTitle>Add new contact</SubTitle>\n            <ContactForm />\n          </Box>\n          <WrapperContacts>\n            <SubTitle>Contacts</SubTitle>\n            <Filter />\n            {contacts && isLoading && <ContactsSkeleton />}\n            {contacts.length === 0 && !isLoading && <Plug> No contacts</Plug>}\n            {!isLoading && contacts && <ContactList />}\n          </WrapperContacts>\n        </Wrapper>\n      </Box>\n    </>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\nimport { PhoneBook } from 'components/PhoneBook/PhoneBook';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <PhoneBook />\n    </>\n  );\n}\n"],"names":["LabelForm","styled","p","theme","space","InputForm","colors","colorTitle","getContacts","fontSizes","xs","radii","normal","colorInteract","state","contacts","items","IsLoading","isLoading","getFilter","filter","themeAddBtn","createTheme","components","MuiLoadingButton","styleOverrides","root","fontSize","textTransform","color","borderColor","boxShadow","ContactForm","handleSubmitCloseModal","defaultValue","nick","phone","btnText","id","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","useEffect","handleOnInputChange","e","target","value","console","log","as","display","flexDirection","onSubmit","preventDefault","normalizeName","toLocaleLowerCase","IsContactInList","find","contact","toast","duration","position","style","borderRadius","background","border","currentTarget","elements","innerText","updateContact","addContact","autocomplete","htmlFor","Person","sx","marginRight","fontWeight","type","pattern","title","required","onChange","autoFocus","Phone","maxLength","ThemeProvider","LoadingButton","loading","loadingPosition","endIcon","AddCircleOutline","variant","size","mt","FilterLabelForm","FilterInput","inputColor","shadows","input","MuiInput","borderBottomColor","fontFamily","padding","Filter","alignItems","mb","Input","getValue","autoComplete","ContactItem","ContactNumber","DeleteBtn","EditBtn","AiFillEdit","Overlay","Modal","TitleWrapper","CloseBtn","AiOutlineCloseCircle","EditContact","closeModal","localStorage","getItem","JSON","parse","item","handleCloseModal","key","document","querySelector","overflowY","window","removeEventListener","addEventListener","onClick","marginLeft","marginBottom","Item","isModalOpen","setIsModalOpen","disabled","deleteContact","ContactList","normFilter","renderContactsList","includes","mr","width","length","map","ContactsSkeleton","props","height","viewBox","backgroundColor","x","y","rx","ry","PhoneBook","backgroundImage","backgroundRepeat","backgroundSize","ml","minHeight","borderStyle","maxHeight","Tasks","fetchContacts","Helmet"],"sourceRoot":""}